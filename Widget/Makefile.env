#======================================================================
# select which tools to use as compiler, 
# librarian and linker
#======================================================================
# 		CFLAGS
#======================================================================
# CFLAGS	+= -std=c99 
CFLAGS 		+= -Wall -O1 -Os -Werror
CFLAGS		+= -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums

#======================================================================
# 		CXXFLAGS
#======================================================================
CXXFLAGS	+= -std=c++11
CXXFLAGS	+= -Wall -O2

#======================================================================
# select which tools to use as compiler, librarian and linker
#======================================================================
AR = ar
ARFLAGS = rv
#======================================================================
# 	libraries used in this project
#======================================================================
LIBS	+= boost_regex boost_system boost_thread 
LIBS 	+= boost_filesystem boost_date_time boost_coroutine boost_context
LIBS 	+= wthttp wt 
#LIBS 	+= wtdbo wtdbosqlite3
#LIBS 	+= m crypt
#LIBS 	+= boost_signals
LIBS	:= $(addprefix -l,$(LIBS))
#LIBS 	+= -L/usr/local/lib 
LIBS	:= $(sort $(LIBS))

#======================================================================
all: checkdirs build stop-server

build: checkdirs build-obj

build-obj: $(WIDGET_OBJ) $(PROGRAMS)

$(BUILD_BASE)/%.o: $(WIDGET_BASE)/%.c
	$(CC) $(CFLAGS) $(MLD_INC) -MM -MT $@ -MF $(patsubst %.o,%.deps,$@) $<
	$(CC) $(CFLAGS) $(MLD_INC) -c $< -o $@

$(BUILD_BASE)/%.o: $(WIDGET_BASE)/%.cpp
	$(CXX) $(CXXFLAGS) $(MLD_INC) -MM -MT $@ -MF $(patsubst %.o,%.deps,$@) $<
	$(CXX) $(CXXFLAGS) $(MLD_INC) -c $< -o $@

checkdirs: $(WIDGET_BUILD_DIR)
	
$(WIDGET_BUILD_DIR):
	$(MKDIR) $@

clean:
	$(RMDIR) $(WIDGET_OBJ) $(WIDGET_DEP) $(WIDGET_TEST_OBJ)

APPROOT		:= $(addsuffix approot, $(WIDGET_PATH))
DOCROOT		:= $(addsuffix docroot, $(WIDGET_PATH))
RESOURCES 	:= $(addsuffix resources, $(WIDGET_PATH))

run: $(PROGRAMS)
	$< --http-address 0.0.0.0 --http-port 8080 --docroot=$(DOCROOT) --approot=$(APPROOT) --resources-dir=$(RESOURCES)

stop-server:
	@sh StopServer.sh $(PROGRAMS)

ifneq ($(filter clean,$(MAKECMDGOALS)),clean)
-include $(WIDGET_DEP)
endif

