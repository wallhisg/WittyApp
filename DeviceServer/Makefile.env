#======================================================================
# select which tools to use as compiler, 
# librarian and linker
#======================================================================
# 		CFLAGS
#======================================================================
# CFLAGS	+= -std=c99 
CFLAGS 		+= -Wall -O1 -Os -Werror
CFLAGS		+= -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums
#======================================================================
# 		CXXFLAGS
#======================================================================
CXXFLAGS	+= -std=c++11
CXXFLAGS	+= -Wall -O2
#======================================================================
# select which tools to use as compiler, librarian and linker
#======================================================================
AR = ar
ARFLAGS = rv
#======================================================================
# 	libraries used in this project
#======================================================================
LIBS	+= boost_regex boost_system boost_thread 
LIBS 	+= boost_filesystem boost_date_time boost_coroutine boost_context
LIBS 	+= wthttp wt 
#LIBS 	+= wtdbo wtdbosqlite3
#LIBS 	+= m crypt
#LIBS 	+= boost_signals
LIBS	:= $(addprefix -l,$(LIBS))
#LIBS 	+= -L/usr/local/lib 
LIBS	:= $(sort $(LIBS))
#======================================================================
all: checkdirs build stop-server build-program

build: checkdirs build-obj build-external-obj remove-program
build-obj: $(PRJ_OBJ) 
build-external-obj: $(EXTERNAL_OBJ)

remove-program: 
	@rm -rf $(PROGRAMS)

build-program: $(PROGRAMS)
#======================================================================
# build Project object, deps
#======================================================================
$(BUILD_BASE)/%.o: $(PRJ_BASE)/%.c
	$(CC) $(CFLAGS) $(MLD_INC) -MM -MT $@ -MF $(patsubst %.o,%.deps,$@) $<
	$(CC) $(CFLAGS) $(MLD_INC) -c $< -o $@

$(BUILD_BASE)/%.o: $(PRJ_BASE)/%.cpp
	$(CXX) $(CXXFLAGS) $(MLD_INC) -MM -MT $@ -MF $(patsubst %.o,%.deps,$@) $<
	$(CXX) $(CXXFLAGS) $(MLD_INC) -c $< -o $@
#======================================================================
# make dir
#======================================================================
checkdirs: checkdirs-local checkdirs-external
checkdirs-local: $(PRJ_BUILD_DIR)
checkdirs-external: $(EXTERNAL_BUILD_DIR)

$(PRJ_BUILD_DIR):
	$(MKDIR) $@

$(EXTERNAL_BUILD_DIR):
	$(MKDIR) $@	
#======================================================================
# clean
#======================================================================
clean: 
	$(RMDIR) $(PRJ_BUILD_DIR)

#======================================================================
# run
SOURCES			:=	sources
SOURCES_PATH	:=	$(ROOT_BASE)/$(SOURCES)/

APPROOT			:=	$(addsuffix approot, $(SOURCES_PATH))
DOCROOT			:=	$(addsuffix docroot, $(SOURCES_PATH))
RESOURCES 		:=	$(addsuffix resources, $(SOURCES_PATH))

run: $(PROGRAMS)
	$< --http-address 0.0.0.0 --http-port 8080 --docroot=$(DOCROOT) --approot=$(APPROOT) --resources-dir=$(RESOURCES)
#======================================================================
# stop server
#======================================================================
stop-server:
	@sh StopServer.sh $(PROGRAMS)

ifneq ($(filter clean,$(MAKECMDGOALS)),clean)
-include $(PRJ_DEP)
endif

